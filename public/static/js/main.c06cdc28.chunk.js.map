{"version":3,"sources":["http-common.js","services/EventService.js","reducers/events.js","services/CategoryService.js","reducers/categories.js","components/AddEvent.js","components/AddCategory.js","components/Event.js","components/EventsList.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["axios","create","baseURL","process","API_URL","headers","EventService","getAll","http","get","id","data","post","update","put","remove","delete","removeAll","findBy","obj","q","keys","Object","i","length","key","value","createEvent","createAsyncThunk","title","description","category","address","isVirtual","date","EventDataService","res","retrieveEvents","updateEvent","deleteEvent","deleteAllEvents","findEventsBy","reducer","createSlice","name","initialState","extraReducers","fulfilled","state","action","push","payload","index","findIndex","event","splice","CategoryService","createCategory","CategoryDataService","retrieveCategories","AddEvent","initialEventState","published","useState","setEvent","submitted","setSubmitted","categories","useSelector","dispatch","useDispatch","initFetch","useCallback","useEffect","handleInputChange","e","target","checked","className","onClick","htmlFor","type","required","onChange","map","unwrap","then","console","log","catch","AddCategory","initialCategoryState","setCategory","Event","props","currentEvent","setCurrentEvent","message","setMessage","match","params","response","updateStatus","status","history","EventsList","currentIndex","setCurrentIndex","filter","setFilter","events","refreshData","newFilter","searchCategory","placeholder","searchTitle","setActiveEvent","to","App","href","activeClassName","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","eventReducer","categoryReducer","store","configureStore","devTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c06cdc28.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: process.env.API_URL || \"/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/events\");\n};\n\nconst get = id => {\n  return http.get(`/events/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"/events\", data);\n};\n\nconst update = (id, data) => {\n  return http.put(`/events/${id}`, data);\n};\n\nconst remove = id => {\n  return http.delete(`/events/${id}`);\n};\n\nconst removeAll = () => {\n  return http.delete(`/events`);\n};\n\nconst findBy = obj => {\n  let q= \"\";\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = obj[key];\n    if(value){\n      if(i === 0) {\n        q += `${key}=${value}`;\n      } else {\n        q += `&${key}=${value}`;\n      }\n    }\n  }\n\n  return http.get(`/events?${q}`);\n};\n\nconst EventService = {\n  getAll,\n  get,\n  create,\n  update,\n  remove,\n  removeAll,\n  findBy\n};\n\nexport default EventService;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport EventDataService from \"../services/EventService\";\n\nconst initialState = [];\n\nexport const createEvent = createAsyncThunk(\n  \"events/create\",\n  async ({ title, description, category, address, isVirtual, date }) => {\n    const res = await EventDataService.create({ title, description, category, address, isVirtual, date });\n    return res.data;\n  }\n);\n\nexport const retrieveEvents = createAsyncThunk(\n  \"events/retrieve\",\n  async () => {\n    const res = await EventDataService.getAll();\n    return res.data;\n  }\n);\n\nexport const updateEvent = createAsyncThunk(\n  \"events/update\",\n  async ({ id, data }) => {\n    const res = await EventDataService.update(id, data);\n    return res.data;\n  }\n);\n\nexport const deleteEvent = createAsyncThunk(\n  \"events/delete\",\n  async ({ id }) => {\n    await EventDataService.remove(id);\n    return { id };\n  }\n);\n\nexport const deleteAllEvents = createAsyncThunk(\n  \"events/deleteAll\",\n  async () => {\n    const res = await EventDataService.removeAll();\n    return res.data;\n  }\n);\n\nexport const findEventsBy = createAsyncThunk(\n  \"events/findBy\",\n  async (obj) => {\n    const res = await EventDataService.findBy(obj);\n    return res.data;\n  }\n);\n\nconst eventSlice = createSlice({\n  name: \"event\",\n  initialState,\n  extraReducers: {\n    [createEvent.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [retrieveEvents.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n    [updateEvent.fulfilled]: (state, action) => {\n      const index = state.findIndex(event => event.id === action.payload.id);\n      state[index] = {\n        ...state[index],\n        ...action.payload,\n      };\n    },\n    [deleteEvent.fulfilled]: (state, action) => {\n      let index = state.findIndex(({ id }) => id === action.payload.id);\n      state.splice(index, 1);\n    },\n    [deleteAllEvents.fulfilled]: (state, action) => {\n      return [];\n    },\n    [findEventsBy.fulfilled]: (state, action) => {\n      return [...action.payload];\n    },\n  },\n});\n\nconst { reducer } = eventSlice;\nexport default reducer;","import http from \"../http-common\";\n\nconst getAll = () => {\n  return http.get(\"/categories\");\n};\n\nconst get = id => {\n  return http.get(`/categories/${id}`);\n};\n\nconst create = data => {\n  return http.post(\"/categories\", data);\n};\n\n\nconst CategoryService = {\n  getAll,\n  get,\n  create\n};\n\nexport default CategoryService;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport CategoryDataService from \"../services/CategoryService\";\n\nconst initialState = [];\n\nexport const createCategory = createAsyncThunk(\n  \"categories/create\",\n  async ({ name, description}) => {\n    const res = await CategoryDataService.create({ name, description });\n    return res.data;\n  }\n);\n\nexport const retrieveCategories = createAsyncThunk(\n  \"categories/retrieve\",\n  async () => {\n    const res = await CategoryDataService.getAll();\n    return res.data;\n  }\n);\n\n\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  extraReducers: {\n    [createCategory.fulfilled]: (state, action) => {\n      state.push(action.payload);\n    },\n    [retrieveCategories.fulfilled]: (state, action) => {\n      return [...action.payload];\n    }\n  },\n});\n\nconst { reducer } = categorySlice;\nexport default reducer;","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createEvent } from \"../reducers/events\";\nimport { retrieveCategories } from \"../reducers/categories\";\n\nconst AddEvent = () => {\n  const initialEventState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    address: \"\",\n    isVirtual: false,\n    date: \"\",\n    published: false\n  };\n  const [event, setEvent] = useState(initialEventState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const categories = useSelector(state => state.categories);\n\n  const dispatch = useDispatch();\n  const initFetch = useCallback(() => {\n    dispatch(retrieveCategories());\n  }, [dispatch])\n\n  useEffect(() => {\n    initFetch()\n  }, [initFetch])\n\n  const handleInputChange = e => {\n    let { name, value } = e.target;\n    if (name === \"isVirtual\") {\n      value = e.target.checked\n    }\n    setEvent({ ...event, [name]: value });\n  };\n\n  const saveEvent = () => {\n    const { title, category, description, address, isVirtual, date } = event;\n\n    dispatch(createEvent({ title, category, description, address, isVirtual, date }))\n      .unwrap()\n      .then(data => {\n        console.log(data);\n        setEvent({\n          id: data.id,\n          title: data.title,\n          category: data.category,\n          description: data.description,\n          address: data.address,\n          isVirtual: data.isVirtual,\n          date: data.date,\n          published: data.published\n        });\n        setSubmitted(true);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newEvent = () => {\n    setEvent(initialEventState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newEvent}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={event.title || ''}\n              onChange={handleInputChange}\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"category\">Category</label>\n            <select \n              className=\"form-control\" \n              id=\"category\" \n              value={event.category}\n              onChange={handleInputChange}\n              name=\"category\"\n              required>\n            {categories && categories.map((category, index) => (<option key={\"category -\" + index} value={category.name}>{category.name}</option>))}\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={event.description || ''}\n              onChange={handleInputChange}\n              name=\"description\"\n            />\n          </div> \n          <div className=\"form-group\">\n            <label htmlFor=\"address\">Address</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"address\"\n              value={event.address || ''}\n              onChange={handleInputChange}\n              name=\"address\"\n            />\n          </div>\n        \n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input \n                className=\"form-check-input\" \n                type=\"checkbox\" \n                checked={event.isVirtual}\n                id=\"isVirtual\"\n                onChange={handleInputChange}\n                name=\"isVirtual\"\n              /><label className=\"form-check-label\" htmlFor=\"isVirtual\">Is this event virtual ?</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"date\">Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              id=\"date\"\n              required\n              value={event.date || ''}\n              onChange={handleInputChange}\n              name=\"date\"\n            />\n          </div>\n          <button onClick={saveEvent} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddEvent;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createCategory } from \"../reducers/categories\";\n\nconst AddCategory = () => {\n  const initialCategoryState = {\n    id: null,\n    name: \"\",\n    description: \"\",\n    published: true\n  };\n  const [category, setCategory] = useState(initialCategoryState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    let { name, value } = e.target;\n    if (name === \"published\") {\n      value = e.target.checked\n    }\n    setCategory({ ...category, [name]: value });\n  };\n\n  const saveCategory = () => {\n    const { name, description, published } = category;\n\n    dispatch(createCategory({ name, description, published }))\n      .unwrap()\n      .then(data => {\n        console.log(data);\n        setCategory({\n          id: data.id,\n          name: data.name,\n          description: data.description,\n          published: data.published\n        });\n        setSubmitted(true);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newCategory = () => {\n    setCategory(initialCategoryState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newCategory}>\n            Add Category\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"name\"\n              required\n              value={category.name || ''}\n              onChange={handleInputChange}\n              name=\"name\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <textarea\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={category.description || ''}\n              onChange={handleInputChange}\n              name=\"description\"\n            />\n          </div> \n        \n          <div className=\"form-group\">\n            <div className=\"form-check\">\n              <input \n                className=\"form-check-input\" \n                type=\"checkbox\" \n                checked={category.published}\n                id=\"published\"\n                onChange={handleInputChange}\n                name=\"published\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"published\">Published</label>\n            </div>\n          </div>\n          \n          <button onClick={saveCategory} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddCategory;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateEvent, deleteEvent } from \"../reducers/events\";\nimport EventDataService from \"../services/EventService\";\nimport { retrieveCategories } from \"../reducers/categories\";\n\nconst Event = (props) => {\n  const initialEventState = {\n    id: null,\n    title: \"\",\n    description: \"\",\n    category: \"\",\n    address: \"\",\n    isVirtual: false,\n    date: \"\",\n    published: false\n  };\n  const [currentEvent, setCurrentEvent] = useState(initialEventState);\n  const [message, setMessage] = useState(\"\");\n  const categories = useSelector(state => state.categories);\n\n  const dispatch = useDispatch();\n  const initFetch = useCallback(() => {\n    dispatch(retrieveCategories());\n  }, [dispatch])\n\n  useEffect(() => {\n    initFetch()\n  }, [initFetch])\n\n  const getEvent = id => {\n    EventDataService.get(id)\n      .then(response => {\n        setCurrentEvent(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getEvent(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = e => {\n    let { name, value } = e.target;\n    if (name === \"isVirtual\") {\n      value = e.target.checked\n    }\n    setCurrentEvent({ ...currentEvent, [name]: value });\n  };\n\n  const updateStatus = status => {\n    const data = {\n      id: currentEvent.id,\n      title: currentEvent.title,\n      description: currentEvent.description,\n      category: currentEvent.category,\n      address: currentEvent.address,\n      isVirtual: currentEvent.isVirtual,\n      date: currentEvent.date,\n      published: status\n    };\n\n    dispatch(updateEvent({ id: currentEvent.id, data }))\n      .unwrap()\n      .then(response => {\n        console.log(response);\n        setCurrentEvent({ ...currentEvent, published: status });\n        setMessage(\"The status was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const updateContent = () => {\n    dispatch(updateEvent({ id: currentEvent.id, data: currentEvent }))\n      .unwrap()\n      .then(response => {\n        console.log(response);\n        setMessage(\"The event was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const removeEvent = () => {\n    dispatch(deleteEvent({ id: currentEvent.id }))\n      .unwrap()\n      .then(() => {\n        props.history.push(\"/events\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentEvent ? (\n        <div className=\"edit-form\">\n          <h4>Event</h4>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value={currentEvent.title}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">Category</label>\n                <select \n                  className=\"form-control\"\n                  value={currentEvent.category}\n                  onChange={handleInputChange}\n                  name=\"category\"\n                  id=\"category\"\n                >\n                  {categories && categories.map((category, index) => (<option key={\"category -\" + index} value={category.name}>{category.name}</option>))}\n                </select>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                value={currentEvent.description}\n                onChange={handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"address\"\n                name=\"address\"\n                value={currentEvent.address}\n                onChange={handleInputChange}\n              />\n            </div>\n\n           \n\n            <div className=\"form-group\">\n              <div className=\"form-check\">\n                <input \n                    className=\"form-check-input\" \n                    type=\"checkbox\" \n                    checked={currentEvent.isVirtual}\n                    id=\"isVirtual\"\n                    onChange={handleInputChange}\n                    name=\"isVirtual\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"isVirtual\">Is this event virtual ?</label>\n                </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"date\">Date</label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                id=\"date\"\n                required\n                value={currentEvent.date || ''}\n                onChange={handleInputChange}\n                name=\"date\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                <strong>Status:</strong>\n              </label>\n              {currentEvent.published ? \"Published\" : \"Pending\"}\n            </div>\n          </form>\n\n          {currentEvent.published ? (\n            <button\n              className=\"badge badge-primary mr-4\"\n              onClick={() => updateStatus(false)}\n            >\n              UnPublish\n            </button>\n          ) : (\n            <button\n              className=\"badge badge-primary mr-4\"\n              onClick={() => updateStatus(true)}\n            >\n              Publish\n            </button>\n          )}\n\n          <button className=\"badge badge-danger mr-4\" onClick={removeEvent}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateContent}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Event...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Event;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  retrieveEvents,\n  findEventsBy,\n  deleteAllEvents,\n} from \"../reducers/events\";\nimport { retrieveCategories } from \"../reducers/categories\";\nimport { Link } from \"react-router-dom\";\n\nconst EventsList = () => {\n  const [currentEvent, setCurrentEvent] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [filter, setFilter] = useState({\n    title: \"\",\n    category: \"\"\n  });\n\n  const events = useSelector(state => state.events);\n  const categories = useSelector(state => state.categories);\n  const dispatch = useDispatch();\n\n  const onChangeSearchTitle = e => {\n    const searchTitle = e.target.value;\n    setFilter({...filter, title: searchTitle});\n  };\n\n  const onChangeSearchCategory = e => {\n    const searchCategory = e.target.value;\n    const newFilter = {...filter, category: searchCategory};\n    setFilter(newFilter);\n    findBy(newFilter);\n  };\n\n  const initFetch = useCallback(() => {\n    dispatch(retrieveEvents());\n    dispatch(retrieveCategories());\n  }, [dispatch])\n\n  useEffect(() => {\n    initFetch()\n  }, [initFetch])\n\n  const refreshData = () => {\n    setCurrentEvent(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveEvent = (event, index) => {\n    setCurrentEvent(event);\n    setCurrentIndex(index);\n  };\n\n  const removeAllEvents = () => {\n    dispatch(deleteAllEvents())\n      .then(response => {\n        refreshData();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const findBy = (newFilter) => {\n    refreshData();\n    dispatch(findEventsBy(newFilter));\n  };\n\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"form-group mb-3\">\n          <label htmlFor=\"category\">Select list:</label>\n          <select \n            className=\"form-control\" \n            id=\"category\"\n            value={filter.category}\n            onChange={onChangeSearchCategory}\n          >\n          <option value=\"\">Select your interest</option>\n            {categories && categories.map((category, index) => (<option key={\"category -\" + index} value={category.name}>{category.name}</option>))}\n          </select>\n        </div>\n\n\n      </div>\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by title\"\n            value={filter.title}\n            onChange={onChangeSearchTitle}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={() => findBy(filter)}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Events List</h4>\n\n        <ul className=\"list-group\">\n          {events &&\n            events.map((event, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => setActiveEvent(event, index)}\n                key={index}\n              >\n                {event.title}\n              </li>\n            ))}\n        </ul>\n\n        <button\n          className=\"m-3 btn btn-sm btn-danger\"\n          onClick={removeAllEvents}\n        >\n          Remove All\n        </button>\n      </div>\n      <div className=\"col-md-6\">\n        {currentEvent ? (\n          <div>\n            <h4>Event</h4>\n            <div>\n              <label>\n                <strong>Title:</strong>\n              </label>{\" \"}\n              {currentEvent.title}\n            </div>\n            <div>\n              <label>\n                <strong>Category:</strong>\n              </label>{\" \"}\n              {currentEvent.category}\n            </div>\n            <div>\n              <label>\n                <strong>Description:</strong>\n              </label>{\" \"}\n              {currentEvent.description}\n            </div>\n            <div>\n              <label>\n                <strong>Address:</strong>\n              </label>{\" \"}\n              {currentEvent.address}\n            </div>\n            <div>\n              <label>\n                <strong>Date:</strong>\n              </label>{\" \"}\n              {currentEvent.date}\n            </div>\n            <div>\n              <label>\n                <strong>Type:</strong>\n              </label>{\" \"}\n              {currentEvent.isVirtual ? \"Virtual\" : \"Physical\"}\n            </div>\n            <div>\n              <label>\n                <strong>Status:</strong>\n              </label>{\" \"}\n              {currentEvent.published ? \"Published\" : \"Pending\"}\n            </div>\n\n            <Link\n              to={\"/events/\" + currentEvent.id}\n              className=\"badge badge-warning\"\n            >\n              Edit\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Event...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EventsList;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddEvent from \"./components/AddEvent\";\nimport AddCategory from \"./components/AddCategory\";\nimport Event from \"./components/Event\";\nimport EventsList from \"./components/EventsList\";\n\nfunction App() {\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/events\" className=\"navbar-brand\">\n        Events Directory\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <NavLink to={\"/events\"} className=\"nav-link\" activeClassName=\"active\">\n              Events\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to={\"/add\"} className=\"nav-link\"  activeClassName=\"active\">\n              Add\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink to={\"/add-category\"} className=\"nav-link\"  activeClassName=\"active\">\n              AddCategory\n            </NavLink>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/events\"]} component={EventsList} />\n          <Route exact path=\"/add\" component={AddEvent} />\n          <Route exact path=\"/add-category\" component={AddCategory} />\n          <Route path=\"/events/:id\" component={Event} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport eventReducer from './reducers/events';\nimport categoryReducer from './reducers/categories';\n\nconst reducer = {\n  events: eventReducer,\n  categories: categoryReducer\n}\n\nconst store = configureStore({\n  reducer: reducer,\n  devTools: true,\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}